// scripts/seo-monitor.js
import https from 'https';
import fs from 'fs';
import {URL} from 'url';
import puppeteer from 'puppeteer';


const SITE_URL = 'https://fbe.pp.ua';
const PRODUCTS_API = 'https://fbe.onrender.com/products';

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è HTTP GET
async function fetchPage(url) {
  const browser = await puppeteer.launch({headless: true});
  const page = await browser.newPage();
  await page.goto(url, {waitUntil: 'networkidle2'});
  const html = await page.content();
  await browser.close();
  return {statusCode: 200, body: html}; // —â–æ–± –ø—ñ–¥—Ö–æ–¥–∏–ª–æ –ø—ñ–¥ —Ä–µ—à—Ç—É –∫–æ–¥—É
}


// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ –∑ API
// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ –∑ API
async function fetchProducts() {
  return new Promise((resolve, reject) => {
    https.get(PRODUCTS_API, (res) => {
      let data = '';
      res.on('data', chunk => data += chunk);
      res.on('end', () => {
        try {
          const json = JSON.parse(data);
          if (!Array.isArray(json.data)) {
            return reject(new Error('API –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–≤ –º–∞—Å–∏–≤ data'));
          }
          // —Ñ–æ—Ä–º—É—î–º–æ –º–∞—Å–∏–≤ —à–ª—è—Ö—ñ–≤ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤
          const pages = json.data.map(p => `/product/${p.id}`);
          resolve(pages);
        } catch (err) {
          reject(err);
        }
      });
    }).on('error', reject);
  });
}


// –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è SEO –∞—É–¥–∏—Ç—É
async function runSEOAudit() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫–∞—é SEO –∞—É–¥–∏—Ç...');

  // –î–æ–¥–∞—î–º–æ –≤–∞–∂–ª–∏–≤—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –≤—Ä—É—á–Ω—É
  const pagesToCheck = ['/', '/about', '/contact'];

  try {
    const productPages = await fetchProducts();
    pagesToCheck.push(...productPages);
    console.log(`–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏: ${pagesToCheck.join(', ')}`);
  } catch (err) {
    console.error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–∏ –∑ API:', err.message);
  }

  for (const page of pagesToCheck) {
    try {
      const url = `${SITE_URL}${page}`;
      const res = await fetchPage(url);

      if (res.statusCode === 200) {
        console.log(`‚úÖ ${page} –¥–æ—Å—Ç—É–ø–Ω–∞`);
        // —Ç—É—Ç –º–æ–∂–Ω–∞ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ analyzeSEO(res.body, url)
      } else {
        console.warn(`‚ö†Ô∏è ${page} –ø–æ–≤–µ—Ä—Ç–∞—î —Å—Ç–∞—Ç—É—Å ${res.statusCode}`);
      }
      await new Promise(r => setTimeout(r, 500)); // –ø–∞—É–∑–∞ –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏
    } catch (err) {
      console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ ${page}:`, err.message);
    }
  }
}

runSEOAudit().catch(console.error);
