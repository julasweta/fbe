// src/interfaces/IProduct.ts

// –ï–Ω—É–º —Ä–æ–∑–º—ñ—Ä—ñ–≤
export enum ESize {
  XS = "XS",
  S = "S",
  M = "M",
  L = "L",
  XL = "XL",
  XXL = "XXL",
}

// –ï–Ω—É–º –∫–æ–ª—å–æ—Ä—ñ–≤
export enum EColor {
  RED = "RED",
  GREEN = "GREEN",
  BLUE = "BLUE",
  BLACK = "BLACK",
  WHITE = "WHITE",
  YELLOW = "YELLOW",
  ORANGE = "ORANGE",
  PURPLE = "PURPLE",
  PINK = "PINK",
  GREY = "GREY",
  BROWN = "BROWN",
}

// –ú–∞–ø–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
export const sizeLabels: Record<ESize, string> = {
  [ESize.XS]: "XS",
  [ESize.S]: "S",
  [ESize.M]: "M",
  [ESize.L]: "L",
  [ESize.XL]: "XL",
  [ESize.XXL]: "XXL",
};

export const colorLabels: Record<EColor, string> = {
  [EColor.RED]: "Red",
  [EColor.GREEN]: "Green",
  [EColor.BLUE]: "Blue",
  [EColor.BLACK]: "Black",
  [EColor.WHITE]: "White",
  [EColor.YELLOW]: "Yellow",
  [EColor.ORANGE]: "Orange",
  [EColor.PURPLE]: "Purple",
  [EColor.PINK]: "Pink",
  [EColor.GREY]: "Grey",
  [EColor.BROWN]: "Brown",
};

export const colorHexMap: Record<EColor, string> = {
  [EColor.RED]: "#b34a4a", // –ø—Ä–∏–≥–ª—É—à–µ–Ω–∏–π —á–µ—Ä–≤–æ–Ω–∏–π, –≤–∏–Ω–Ω–∏–π –≤—ñ–¥—Ç—ñ–Ω–æ–∫
  [EColor.GREEN]: "#4a7c59", // –º'—è–∫–∏–π –∑–µ–ª–µ–Ω–∏–π, —ñ–∑ –ª–µ–≥–∫–∏–º —Å—ñ—Ä–∏–º –ø—ñ–¥—Ç–æ–Ω–æ–º
  [EColor.BLUE]: "#4a6fa5", // —Å—ñ—Ä–æ-–±–ª–∞–∫–∏—Ç–Ω–∏–π, –ø—Ä–∏–≥–ª—É—à–µ–Ω–∏–π —Å–∏–Ω—ñ–π
  [EColor.BLACK]: "#1e1e1e", // –≥–ª–∏–±–æ–∫–∏–π –≥—Ä–∞—Ñ—ñ—Ç, –Ω–µ —á–∏—Å—Ç–æ —á–æ—Ä–Ω–∏–π
  [EColor.WHITE]: "#f5f5f5", // —Ç–µ–ø–ª–∏–π –±—ñ–ª–∏–π, –º–∞–π–∂–µ –º–æ–ª–æ—á–Ω–∏–π
  [EColor.YELLOW]: "#d4c35b", // –∑–æ–ª–æ—Ç–∞–≤–æ-–∂–æ–≤—Ç–∏–π, —Ç–µ–ø–ª–∏–π
  [EColor.ORANGE]: "#d87a4a", // —Ç–µ—Ä–∞–∫–æ—Ç–æ–≤–∏–π, –º—ñ–¥–Ω–æ-–æ—Ä–∞–Ω–∂–µ–≤–∏–π
  [EColor.PURPLE]: "#6a4a7c", // —Ñ—ñ–æ–ª–µ—Ç–æ–≤–∏–π –∑ —Å—ñ—Ä–∏–º –ø—ñ–¥—Ç–æ–Ω–æ–º
  [EColor.PINK]: "#ff99bb", // –ø—É–¥—Ä–æ–≤–æ-—Ä–æ–∂–µ–≤–∏–π, –Ω—ñ–∂–Ω–∏–π
  [EColor.GREY]: "#808080", // –∫–ª–∞—Å–∏—á–Ω–∏–π —Å—ñ—Ä–∏–π, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∏–π
  [EColor.BROWN]: "#8b5e3c", // —Ç–µ–ø–ª–∏–π –∫–æ—Ä–∏—á–Ω–µ–≤–∏–π, –∫–∞–≤–æ–≤–∏–π
};

// üü¢ DTO –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ

// –¢—Ä–∞–Ω—Å–ª—è—Ü—ñ—è
export interface ICreateProductTranslation {
  name: string;
  description?: string;
  languageId: number;
}

// –§—ñ—á–∞
export interface ICreateProductFeature {
  text: string;
  order: number;
}

// –ö–∞—Ä—Ç–∏–Ω–∫–∞
export interface ICreateProductImage {
  url: string;
  altText?: string;
}

// –í–∞—Ä—ñ–∞–Ω—Ç
export interface ICreateProductVariant {
  productId?: number;
  id?: number;
  color: EColor;
  sizes: ESize[];
  price: number;
  priceSale?: number | null;
  stock: number;
  images?: ICreateProductImage[];
  description?: string;
}

// –ü—Ä–æ–¥—É–∫—Ç
export interface ICreateProduct {
  id?: number | null | undefined;
  sku: string;
  price: number;
  priceSale?: number | null;
  categoryId?: number;
  collectionId?: number;
  translations: ICreateProductTranslation[];
  features: ICreateProductFeature[];
  variants: ICreateProductVariant[]; // –±–µ–∑ productId
}

export interface IProduct {
  id: number;
  sku: string;
  price: number;
  priceSale?: number | null;
  categoryId?: number;
  collectionId?: number;
  translations: ICreateProductTranslation[];
  features: ICreateProductFeature[];
  variants: ICreateProductVariant[]; // –±–µ–∑ productId
}

export interface IProductsResponse {
  data: IProduct[];
  count: number;
  page: number;
  totalPages: number;
}
export interface ProductFilters {
  limit?: number;
  skip?: number;
  categorySlug?: string | undefined;
  collectionSlug?: string | undefined;
}
