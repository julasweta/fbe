import { Injectable } from '@nestjs/common';
import { HttpService } from '@nestjs/axios';
import { firstValueFrom } from 'rxjs';
import { OrderItemDto } from '../order-item/dto/order-item.dto';

@Injectable()
export class TelegramService {
  constructor(private readonly http: HttpService) {}

  async sendOrderNotification(data: {
    user: any;
    items: any[];
    paymentMethod: string;
  }) {
    const message = `
üì¶ –ù–û–í–ï –ó–ê–ú–û–í–õ–ï–ù–ù–Ø
üë§ ${data.user.name} (${data.user.phone})
üìß ${data.user.email}
üè† ${data.user.address}, ${data.user.novaPostCity}, ${data.user.novaPostBranch}
üí≥ –û–ø–ª–∞—Ç–∞: ${data.paymentMethod}

üõí –¢–æ–≤–∞—Ä–∏:
${data.items
  .map(
    (i: OrderItemDto) =>
      `‚Ä¢ ID: ${i.productId}
   –ù–∞–∑–≤–∞: ${i.name}
   –ö–æ–ª—ñ—Ä: ${i.color}
   –†–æ–∑–º—ñ—Ä: ${i.size}
   –ö-—Å—Ç—å: ${i.quantity}
   –¶—ñ–Ω–∞: ${i.price} –≥—Ä–Ω
   –¶—ñ–Ω–∞ –∑—ñ –∑–Ω–∏–∂–∫–æ—é: ${i.priceSale}
   –û—Å—Ç–∞—Ç–æ—á–Ω–∞ —Ü—ñ–Ω–∞: ${i.finalPrice} –≥—Ä–Ω
   –§–æ—Ç–æ: ${i.image}`,
  )
  .join('\n\n')}
  `;

    try {
      const res = await firstValueFrom(
        this.http.post(
          `https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/sendMessage`,
          {
            chat_id: process.env.TELEGRAM_CHAT_ID,
            text: message,
            parse_mode: 'HTML',
          },
        ),
      );

      console.log('‚úÖ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ —É Telegram:', res.data);
    } catch (err) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ Telegram:', err.response?.data || err.message);
    }
  }
}
